{"ast":null,"code":"import { PushpinTwoTone } from \"@ant-design/icons\";\nimport { all, fork, takeEvery, delay, put } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_ERROR, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_ERROR, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_ERROR, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_ERROR, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_ERROR } from \"../reducers/userReducer\";\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    put({\n      type: LOG_OUT_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* follow(action) {\n  //{data:{postUserId}}\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* unFollow(action) {\n  //{data:{postUserId}}\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeEvery(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}","map":{"version":3,"sources":["C:/WEB/front_next/sagas/userSaga.js"],"names":["PushpinTwoTone","all","fork","takeEvery","delay","put","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_ERROR","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_ERROR","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_ERROR","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_ERROR","logIn","action","type","err","data","logOut","signUp","follow","unFollow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import { PushpinTwoTone } from \"@ant-design/icons\";\r\nimport {all,fork,takeEvery,delay,put} from \"redux-saga/effects\";\r\nimport {\r\n    LOG_IN_REQUEST,LOG_IN_SUCCESS,LOG_IN_ERROR,\r\n    LOG_OUT_REQUEST,LOG_OUT_SUCCESS,LOG_OUT_ERROR,\r\n    SIGN_UP_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_ERROR,\r\n    FOLLOW_REQUEST,FOLLOW_SUCCESS,FOLLOW_ERROR,\r\n    UNFOLLOW_REQUEST,UNFOLLOW_SUCCESS,UNFOLLOW_ERROR,\r\n} from \"../reducers/userReducer\"\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type:LOG_IN_ERROR,\r\n            data:err\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS\r\n        });\r\n    } catch(err){\r\n        put({\r\n            type:LOG_OUT_ERROR,\r\n            data:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:SIGN_UP_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* follow(action){//{data:{postUserId}}\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:FOLLOW_SUCCESS,\r\n            data:action.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:FOLLOW_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* unFollow(action){//{data:{postUserId}}\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:UNFOLLOW_SUCCESS,\r\n            data:action.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:UNFOLLOW_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn(){\r\n    yield takeEvery(LOG_IN_REQUEST,logIn);\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeEvery(LOG_OUT_REQUEST,logOut);\r\n}\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST,signUp);\r\n}\r\nfunction* watchFollow(){\r\n    yield takeEvery(FOLLOW_REQUEST,follow);\r\n}\r\nfunction* watchUnFollow(){\r\n    yield takeEvery(UNFOLLOW_REQUEST,unFollow);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}