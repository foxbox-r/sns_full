{"ast":null,"code":"import { CalculatorFilled, PushpinTwoTone } from \"@ant-design/icons\";\nimport { all, fork, takeEvery, put, delay, call } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_ERROR, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_ERROR, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_ERROR, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_ERROR, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_ERROR, generateDummyPost, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_ERROR, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_ERROR } from \"../reducers/postReducer\";\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/userReducer\";\nimport axios from \"axios\";\n\nfunction addPostApi(data) {\n  //data:formData : formData는 {}안 감싸고 그냥 넣는다\n  console.log(\"api\");\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  //(data:formData)\n  try {\n    const result = yield call(addPostApi, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    put({\n      type: ADD_POST_ERROR,\n      error: err\n    });\n  }\n}\n\nfunction addCommentApi(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  //(data:{postId,content,userId})\n  try {\n    const result = yield call(addCommentApi, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction loadPostApi(data) {\n  return axios.get(\"/posts\", data);\n}\n\nfunction* loadPost(action) {\n  //\n  try {\n    const result = yield call(loadPostApi, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction likePostApi(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  //{data:postId}\n  try {\n    const result = yield call(likePostApi, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction unLikePostApi(data) {\n  return axios.delete(`/post/${data}/like`);\n}\n\nfunction* unLikePost(action) {\n  //{data:postId}\n  try {\n    const result = yield call(unLikePostApi, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction removePostApi(data) {\n  return axios.delete(`/post/${data.id}`);\n}\n\nfunction* removePost(action) {\n  //(data:{id})\n  try {\n    const result = yield call(removePostApi, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    put({\n      type: REMOVE_POST_ERROR,\n      error: err\n    });\n  }\n}\n\nfunction uploadImagesApi(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  //{data:imageFormData}\n  try {\n    const result = yield call(uploadImagesApi, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UPLOAD_IMAGES_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction retweetApi(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  //{data:postId}\n  try {\n    const result = yield call(retweetApi, action.data);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: RETWEET_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield takeEvery(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLikePost() {\n  yield takeEvery(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLikePost() {\n  yield takeEvery(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchRemovePost() {\n  yield takeEvery(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeEvery(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeEvery(RETWEET_REQUEST, retweet);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPost), fork(watchLikePost), fork(watchUnLikePost), fork(watchRemovePost), fork(watchUploadImages), fork(watchRetweet)]);\n}","map":{"version":3,"sources":["C:/WEB/full/front_next/sagas/postSaga.js"],"names":["CalculatorFilled","PushpinTwoTone","all","fork","takeEvery","put","delay","call","shortId","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_ERROR","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_ERROR","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_ERROR","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_ERROR","generateDummyPost","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_ERROR","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_ERROR","ADD_POST_TO_ME","REMOVE_POST_TO_ME","axios","addPostApi","data","console","log","post","addPost","action","result","type","id","err","error","addCommentApi","postId","addComment","loadPostApi","get","loadPost","likePostApi","patch","likePost","unLikePostApi","delete","unLikePost","removePostApi","removePost","uploadImagesApi","uploadImages","retweetApi","retweet","watchAddPost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchRemovePost","watchUploadImages","watchRetweet","postSaga"],"mappings":"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","sourcesContent":["import { CalculatorFilled, PushpinTwoTone } from \"@ant-design/icons\";\r\nimport {all,fork,takeEvery,put,delay,call} from \"redux-saga/effects\"\r\nimport shortId from \"shortid\"\r\nimport {\r\n    ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_ERROR,\r\n    REMOVE_POST_REQUEST,REMOVE_POST_SUCCESS,REMOVE_POST_ERROR,\r\n     ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS,ADD_COMMENT_ERROR,\r\n     LOAD_POST_REQUEST,LOAD_POST_SUCCESS,LOAD_POST_ERROR,\r\n     LIKE_POST_REQUEST,LIKE_POST_SUCCESS,LIKE_POST_ERROR,\r\n     UNLIKE_POST_REQUEST,UNLIKE_POST_SUCCESS,UNLIKE_POST_ERROR,\r\n     generateDummyPost,\r\n     UPLOAD_IMAGES_REQUEST,UPLOAD_IMAGES_SUCCESS,UPLOAD_IMAGES_ERROR,\r\n     RETWEET_REQUEST,RETWEET_SUCCESS,RETWEET_ERROR,\r\n} from \"../reducers/postReducer\"\r\nimport {\r\n    ADD_POST_TO_ME,REMOVE_POST_TO_ME,\r\n} from \"../reducers/userReducer\"\r\n\r\nimport axios from \"axios\";\r\n \r\nfunction addPostApi(data){ //data:formData : formData는 {}안 감싸고 그냥 넣는다\r\n    console.log(\"api\");\r\n    return axios.post(\"/post\",data);\r\n}\r\n\r\nfunction* addPost(action){//(data:formData)\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        yield put({ \r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n        yield put({\r\n            type:ADD_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    } catch(err){\r\n        put({\r\n            type:ADD_POST_ERROR,\r\n            error:err,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction addCommentApi(data){ \r\n    return axios.post(`/post/${data.postId}/comment`,data);\r\n}\r\n\r\nfunction* addComment(action){//(data:{postId,content,userId})\r\n    try{\r\n        const result = yield call(addCommentApi,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n            data:result.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:ADD_COMMENT_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadPostApi(data){\r\n    return axios.get(\"/posts\",data);\r\n}\r\n\r\nfunction* loadPost(action){//\r\n    try{\r\n        const result = yield call(loadPostApi,action.data);\r\n        yield put({\r\n            type:LOAD_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:LOAD_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction likePostApi(data){\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action){//{data:postId}\r\n    try{\r\n        const result = yield call(likePostApi,action.data);\r\n        yield put({\r\n            type:LIKE_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:LIKE_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikePostApi(data){\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unLikePost(action){//{data:postId}\r\n    try{\r\n        const result = yield call(unLikePostApi,action.data);\r\n        yield put({\r\n            type:UNLIKE_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:UNLIKE_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction removePostApi(data){\r\n    return axios.delete(`/post/${data.id}`);\r\n}\r\n\r\nfunction* removePost(action){//(data:{id})\r\n    try{\r\n        const result = yield call(removePostApi,action.data);\r\n        yield put({\r\n            type:REMOVE_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n        yield put({\r\n            type:REMOVE_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    } catch(err){\r\n        put({\r\n            type:REMOVE_POST_ERROR,\r\n            error:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction uploadImagesApi(data){\r\n    return axios.post(`/post/images`,data);\r\n}\r\n\r\nfunction* uploadImages(action){//{data:imageFormData}\r\n    try{\r\n        const result = yield call(uploadImagesApi,action.data);\r\n        yield put({\r\n            type:UPLOAD_IMAGES_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:UPLOAD_IMAGES_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction retweetApi(data){\r\n    return axios.post(`/post/${data}/retweet`,data);\r\n}\r\n\r\nfunction* retweet(action){//{data:postId}\r\n    try{\r\n        const result = yield call(retweetApi,action.data);\r\n        yield put({\r\n            type:RETWEET_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:RETWEET_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\nfunction* watchAddPost(){\r\n    yield takeEvery(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeEvery(ADD_COMMENT_REQUEST,addComment)\r\n}\r\n\r\nfunction* watchLoadPost(){\r\n    yield takeEvery(LOAD_POST_REQUEST,loadPost);\r\n}\r\n\r\nfunction* watchLikePost(){\r\n    yield takeEvery(LIKE_POST_REQUEST,likePost);\r\n}\r\n\r\nfunction* watchUnLikePost(){\r\n    yield takeEvery(UNLIKE_POST_REQUEST,unLikePost);\r\n}\r\n\r\nfunction* watchRemovePost(){\r\n    yield takeEvery(REMOVE_POST_REQUEST,removePost);\r\n}\r\nfunction* watchUploadImages(){\r\n    yield takeEvery(UPLOAD_IMAGES_REQUEST,uploadImages);\r\n}\r\nfunction* watchRetweet(){\r\n    yield takeEvery(RETWEET_REQUEST,retweet);\r\n}\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchRemovePost),\r\n        fork(watchLoadPost),\r\n        fork(watchLikePost),\r\n        fork(watchUnLikePost),\r\n        fork(watchRemovePost),\r\n        fork(watchUploadImages),\r\n        fork(watchRetweet),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}