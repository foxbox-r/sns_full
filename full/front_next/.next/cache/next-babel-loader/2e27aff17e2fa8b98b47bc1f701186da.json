{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\WEB\\\\front_next\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPostRequestAction } from \"../reducers/postReducer\";\nimport useInput from \"../hooks/useInput\";\n\nfunction PostForm() {\n  _s();\n\n  var _this = this;\n\n  var dispatch = useDispatch();\n  var imgInput = useRef();\n\n  var _useSelector = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone,\n      addPostLoading = _useSelector.addPostLoading;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangePostText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var onSubmit = useCallback(function () {\n    dispatch(addPostRequestAction({\n      postContent: text\n    }));\n    setText(\"\");\n  }, [text]);\n  var onClickImgUpload = useCallback(function () {\n    imgInput.current.click();\n  }, [imgInput.current]);\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n      alert(\"cliear\");\n    }\n  }, [addPostDone]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangePostText,\n      maxLength: 140,\n      placeholder: \"isnert your post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imgInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImgUpload,\n        children: \"img upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        children: addPostLoading ? \"로딩...\" : \"짹짹\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: v,\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"04Zd2pR9G5GyGKGeZFUlCaqgubQ=\", false, function () {\n  return [useDispatch, useSelector, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["C:/WEB/front_next/components/PostForm.js"],"names":["React","useCallback","useState","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","addPostRequestAction","useInput","PostForm","dispatch","imgInput","state","postReducer","imagePaths","addPostDone","addPostLoading","text","onChangePostText","setText","onSubmit","postContent","onClickImgUpload","current","click","alert","margin","map","v","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef,useEffect} from 'react';\r\nimport {Form, Input,Button} from \"antd\"\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {addPostRequestAction} from \"../reducers/postReducer\"\r\nimport useInput from \"../hooks/useInput\"\r\n\r\nfunction PostForm(){\r\n    const dispatch = useDispatch();\r\n    const imgInput = useRef();\r\n    const {imagePaths,addPostDone,addPostLoading} = useSelector(state=>state.postReducer);\r\n    const [text,onChangePostText,setText] = useInput(\"\");\r\n\r\n    const onSubmit = useCallback(()=>{\r\n        dispatch(addPostRequestAction({postContent:text}));\r\n        setText(\"\");\r\n    },[text])\r\n\r\n    const onClickImgUpload = useCallback(()=>{\r\n        imgInput.current.click();\r\n    },[imgInput.current])\r\n\r\n    useEffect(()=>{\r\n        if(addPostDone){\r\n            setText(\"\");\r\n            alert(\"cliear\");\r\n        }\r\n    },[addPostDone]);\r\n\r\n    return (\r\n        <Form style={{margin:\"10px 0 20px\"}} onFinish={onSubmit}>\r\n            <Input.TextArea \r\n                value={text}\r\n                onChange={onChangePostText}\r\n                maxLength={140}\r\n                placeholder=\"isnert your post\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imgInput}/>\r\n                <Button onClick={onClickImgUpload}>img upload</Button>\r\n                <Button type=\"primary\" style={{float:\"right\"}} htmlType=\"submit\">{addPostLoading?\"로딩...\":\"짹짹\"}</Button> \r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v)=>(\r\n                    <div key={v} style={{display:\"inline-block\"}}>\r\n                        <img src={v} style={{width:\"200px\"}} alt={v} />\r\n                        <div>\r\n                            <Button>remove</Button>\r\n                        </div>\r\n                    </div>   \r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}