{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport produce from \"immer\";\nconst initialState = {\n  logInLoading: false,\n  logInDone: false,\n  logInErorr: null,\n  logOutLoading: false,\n  logOutDone: false,\n  logOutErorr: null,\n  signUpLoading: false,\n  signUpDone: false,\n  signUpErorr: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\nexport const LOG_IN_REQUEST = \"userReducer/LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"userReducer/LOG_IN_SUCCESS\";\nexport const LOG_IN_ERROR = \"userReducer/LOG_IN_ERROR\";\nexport const LOG_OUT_REQUEST = \"userReducer/LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"userReducer/LOG_OUT_SUCCESS\";\nexport const LOG_OUT_ERROR = \"userReducer/LOG_OUT_ERROR\";\nexport const SIGN_UP_REQUEST = \"userReducer/SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"userReducer/SIGN_UP_SUCCESS\";\nexport const SIGN_UP_ERROR = \"userReducer/SIGN_UP_ERROR\";\nexport const FOLLOW_REQUEST = \"userReducer/FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"userReducer/FOLLOW_SUCCESS\";\nexport const FOLLOW_ERROR = \"userReducer/FOLLOW_ERROR\";\nexport const UNFOLLOW_REQUEST = \"userReducer/UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"userReducer/UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_ERROR = \"userReducer/UNFOLLOW_ERROR\";\nexport const ADD_POST_TO_ME = \"userReducer/ADD_POST_TO_ME\";\nexport const REMOVE_POST_TO_ME = \"userReducer/REMOVE_POST_TO_ME\";\nexport const logoutRequestAction = () => ({\n  type: LOG_OUT_REQUEST\n});\nexport const loginRequestAction = data => ({\n  type: LOG_IN_REQUEST,\n  data\n});\n\nconst dummyUser = data => _objectSpread(_objectSpread({\n  id: 1,\n  nickname: \"foxboxr\"\n}, data), {}, {\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: \"r\"\n  }, {\n    nickname: \"asr\"\n  }, {\n    nickname: \"rd\"\n  }],\n  Followers: [{\n    nickname: \"r\"\n  }, {\n    nickname: \"asr\"\n  }, {\n    nickname: \"rd\"\n  }]\n});\n\nconst userReducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        // return {\n        //     ...state,\n        //     logInLoading:true,\n        //     logInError:null,\n        //     logInDone:false,\n        // }\n        draft.logInLoading = true;\n        draft.logInError = null;\n        draft.logInDone = false;\n        break;\n\n      case LOG_IN_SUCCESS:\n        // return {\n        //     ...state,\n        //     logInDone:true,\n        //     logInLoading:false,\n        //     me:dummyUser(action.data),\n        // }\n        draft.logInDone = true;\n        draft.logInLoading = false;\n        draft.me = dummyUser(action.data);\n        break;\n\n      case LOG_IN_ERROR:\n        // return {\n        //     ...state,\n        //     logInLoading:false,\n        //     logInError:action.data,\n        // }\n        draft.logInLoading = false;\n        draft.logInError = action.data;\n        break;\n\n      case LOG_OUT_REQUEST:\n        // return {\n        //     ...state,\n        //     logOutLoading:true,\n        //     logOutErorr:null,\n        // }\n        draft.logOutLoading = true;\n        draft.logOutErorr = null;\n        break;\n\n      case LOG_OUT_SUCCESS:\n        // return {\n        //     ...state,\n        //     logOutDone:true,\n        //     logOutLoading:false,\n        //     me:null,\n        // }\n        draft.logOutDone = true;\n        draft.logOutLoading = false;\n        draft.me = null;\n        break;\n\n      case LOG_OUT_ERROR:\n        // return {\n        //     ...state,\n        //     logOutLoading:false,\n        //     logOutError:action.data,\n        // }\n        draft.logOutLoading = false;\n        draft.logOutError = action.data;\n        break;\n\n      case SIGN_UP_REQUEST:\n        // return {\n        //     ...state,\n        //     signUpLoading:true,\n        //     signUpErorr:null,\n        // }\n        draft.signUpLoading = true;\n        draft.signUpErorr = null;\n        break;\n\n      case SIGN_UP_SUCCESS:\n        // return {\n        //     ...state,\n        //     signUpDone:true,\n        //     signUpLoading:false,\n        // }\n        draft.signUpDone = true;\n        draft.signUpLoading = false;\n        break;\n\n      case SIGN_UP_ERROR:\n        return _objectSpread(_objectSpread({}, state), {}, {\n          signUpLoading: false,\n          signUpError: action.data\n        });\n\n      case ADD_POST_TO_ME:\n        //data:{id}\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: [{\n              id: action.data.id\n            }, ...state.me.Posts]\n          })\n        });\n\n      case REMOVE_POST_TO_ME:\n        //data:{id}\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: state.me.Posts.filter(post => post.id !== action.data.id)\n          })\n        });\n\n      default:\n        return state;\n    }\n  });\n};\n\nexport default userReducer;","map":{"version":3,"sources":["C:/WEB/front_next/reducers/userReducer.js"],"names":["produce","initialState","logInLoading","logInDone","logInErorr","logOutLoading","logOutDone","logOutErorr","signUpLoading","signUpDone","signUpErorr","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_ERROR","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_ERROR","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_ERROR","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_ERROR","ADD_POST_TO_ME","REMOVE_POST_TO_ME","logoutRequestAction","type","loginRequestAction","data","dummyUser","id","nickname","Posts","Followings","Followers","userReducer","state","action","draft","logInError","logOutError","signUpError","filter","post"],"mappings":"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","sourcesContent":["import produce from \"immer\"\r\nconst initialState = {\r\n    logInLoading:false,\r\n    logInDone:false,\r\n    logInErorr:null,\r\n\r\n    logOutLoading:false,\r\n    logOutDone:false,\r\n    logOutErorr:null,\r\n\r\n    signUpLoading:false,\r\n    signUpDone:false,\r\n    signUpErorr:null,\r\n\r\n    me:null,\r\n    signUpData:{},\r\n    loginData:{},\r\n};\r\n\r\n\r\nexport const LOG_IN_REQUEST = \"userReducer/LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"userReducer/LOG_IN_SUCCESS\";\r\nexport const LOG_IN_ERROR = \"userReducer/LOG_IN_ERROR\";\r\n\r\nexport const LOG_OUT_REQUEST = \"userReducer/LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"userReducer/LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_ERROR = \"userReducer/LOG_OUT_ERROR\";\r\n\r\nexport const SIGN_UP_REQUEST = \"userReducer/SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"userReducer/SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_ERROR = \"userReducer/SIGN_UP_ERROR\";\r\n\r\nexport const FOLLOW_REQUEST = \"userReducer/FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"userReducer/FOLLOW_SUCCESS\";\r\nexport const FOLLOW_ERROR = \"userReducer/FOLLOW_ERROR\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"userReducer/UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"userReducer/UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_ERROR = \"userReducer/UNFOLLOW_ERROR\";\r\n\r\nexport const ADD_POST_TO_ME = \"userReducer/ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_TO_ME = \"userReducer/REMOVE_POST_TO_ME\";\r\n\r\nexport const logoutRequestAction = ()=>({\r\n    type:LOG_OUT_REQUEST\r\n})\r\n\r\nexport const loginRequestAction = data=>({\r\n    type:LOG_IN_REQUEST,\r\n    data\r\n});\r\n\r\nconst dummyUser = data=>({\r\n    id:1,\r\n    nickname:\"foxboxr\",\r\n    ...data,\r\n    Posts:[{id:1}],\r\n    Followings:[{nickname:\"r\"},{nickname:\"asr\"},{nickname:\"rd\"},],\r\n    Followers:[{nickname:\"r\"},{nickname:\"asr\"},{nickname:\"rd\"},],\r\n})\r\n\r\nconst userReducer = (state=initialState,action)=>{\r\n    return produce(state,(draft)=>{\r\n        switch(action.type){\r\n            case LOG_IN_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading:true,\r\n                //     logInError:null,\r\n                //     logInDone:false,\r\n                // }\r\n                draft.logInLoading = true;\r\n                draft.logInError = null;\r\n                draft.logInDone = false;\r\n                break;\r\n            case LOG_IN_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logInDone:true,\r\n                //     logInLoading:false,\r\n                //     me:dummyUser(action.data),\r\n                // }\r\n                draft.logInDone = true;\r\n                draft.logInLoading = false;\r\n                draft.me = dummyUser(action.data);\r\n                break;\r\n            case LOG_IN_ERROR:\r\n                // return {\r\n                //     ...state,\r\n                //     logInLoading:false,\r\n                //     logInError:action.data,\r\n                // }\r\n                draft.logInLoading = false;\r\n                draft.logInError = action.data;\r\n                break;\r\n            case LOG_OUT_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading:true,\r\n                //     logOutErorr:null,\r\n                // }\r\n                draft.logOutLoading = true;\r\n                draft.logOutErorr = null;\r\n                break;\r\n            case LOG_OUT_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutDone:true,\r\n                //     logOutLoading:false,\r\n                //     me:null,\r\n                // }\r\n                draft.logOutDone = true;\r\n                draft.logOutLoading = false;\r\n                draft.me = null;\r\n                break;\r\n            case LOG_OUT_ERROR:\r\n                // return {\r\n                //     ...state,\r\n                //     logOutLoading:false,\r\n                //     logOutError:action.data,\r\n                // }\r\n                draft.logOutLoading = false;\r\n                draft.logOutError = action.data;\r\n                break;\r\n            case SIGN_UP_REQUEST:\r\n                // return {\r\n                //     ...state,\r\n                //     signUpLoading:true,\r\n                //     signUpErorr:null,\r\n                // }\r\n                draft.signUpLoading = true;\r\n                draft.signUpErorr = null;\r\n                break;\r\n            case SIGN_UP_SUCCESS:\r\n                // return {\r\n                //     ...state,\r\n                //     signUpDone:true,\r\n                //     signUpLoading:false,\r\n                // }\r\n                draft.signUpDone = true;\r\n                draft.signUpLoading = false;\r\n                break;\r\n            case SIGN_UP_ERROR:\r\n                return {\r\n                    ...state,\r\n                    signUpLoading:false,\r\n                    signUpError:action.data,\r\n                }\r\n            case ADD_POST_TO_ME://data:{id}\r\n                return {\r\n                    ...state,\r\n                    me:{\r\n                        ...state.me,\r\n                        Posts:[{id:action.data.id},...state.me.Posts]\r\n                    }\r\n                }\r\n            case REMOVE_POST_TO_ME://data:{id}\r\n                return {\r\n                    ...state,\r\n                    me:{\r\n                        ...state.me,\r\n                        Posts:state.me.Posts.filter(post=>post.id !== action.data.id)\r\n                    }\r\n                }\r\n            default :\r\n                return state;\r\n        }\r\n    })\r\n}\r\n\r\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}