{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\n\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(compose(applyMiddleware.apply(void 0, middlewares)));\n  var store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"rrr\"\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/WEB/front_next/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","configureStore","middlewares","enhancer","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACvB,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GAAG,QACfL,OAAO,CAACD,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CADQ,GAEfH,mBAAmB,CAACD,OAAO,CAACD,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CAAR,CAFrB;AAGA,MAAME,KAAK,GAAGR,WAAW,CAACI,OAAD,EAASG,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAC,iBADM;AAEXC,IAAAA,IAAI,EAAC;AAFM,GAAf;AAKA,SAAOH,KAAP;AACH,CAZD;;AAcA,IAAMI,OAAO,GAAGb,aAAa,CAACM,cAAD,EAAgB;AACzCQ,EAAAA,KAAK;AADoC,CAAhB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport {createStore,applyMiddleware,compose} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = ()=>{\r\n    const middlewares = [];\r\n    const enhancer = process.env.NODE_ENV === \"production\"\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(compose(applyMiddleware(...middlewares)));\r\n    const store = createStore(reducer,enhancer);\r\n    store.dispatch({\r\n        type:\"CHANGE_NICKNAME\",\r\n        data:\"rrr\"\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug:process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}