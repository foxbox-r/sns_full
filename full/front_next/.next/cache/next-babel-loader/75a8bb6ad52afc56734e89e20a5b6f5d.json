{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WEB\\\\front_next\\\\components\\\\PostForm.js\";\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPostRequestAction } from \"../reducers/postReducer\";\n\nfunction PostForm() {\n  const dispatch = useDispatch();\n  const imgInput = useRef();\n  const {\n    imagePaths,\n    addPostDone,\n    addPostLoading\n  } = useSelector(state => state.postReducer);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"\");\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    dispatch(addPostRequestAction({\n      text\n    }));\n    setText(\"\");\n  }, []);\n  const onClickImgUpload = useCallback(() => {\n    imgInput.current.click();\n  }, [imgInput.current]);\n  useEffect(() => {}, [addPostDone]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"isnert your post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        hidden: true,\n        ref: imgInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImgUpload,\n        children: \"img upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        htmlType: \"submit\",\n        children: \"\\uC9F9\\uC9F9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(v => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: v,\n          style: {\n            width: \"200px\"\n          },\n          alt: v\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, v, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\nexport default PostForm;","map":{"version":3,"sources":["C:/WEB/front_next/components/PostForm.js"],"names":["React","useCallback","useState","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","addPostRequestAction","PostForm","dispatch","imgInput","imagePaths","addPostDone","addPostLoading","state","postReducer","text","setText","onChangeText","e","target","value","onSubmit","onClickImgUpload","current","click","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["import React,{useCallback,useState,useRef,useEffect} from 'react';\r\nimport {Form, Input,Button} from \"antd\"\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {addPostRequestAction} from \"../reducers/postReducer\"\r\n\r\nfunction PostForm(){\r\n    const dispatch = useDispatch();\r\n    const imgInput = useRef();\r\n    const {imagePaths,addPostDone,addPostLoading} = useSelector(state=>state.postReducer);\r\n    const [text,setText] = useState(\"\");\r\n    const onChangeText = useCallback((e)=>{\r\n        setText(e.target.value);\r\n    },[]);\r\n\r\n    const onSubmit = useCallback(()=>{\r\n        dispatch(addPostRequestAction({text}));\r\n        setText(\"\");\r\n    },[])\r\n\r\n    const onClickImgUpload = useCallback(()=>{\r\n        imgInput.current.click();\r\n    },[imgInput.current])\r\n\r\n    useEffect(()=>{\r\n\r\n    },[addPostDone]);\r\n\r\n    return (\r\n        <Form style={{margin:\"10px 0 20px\"}} onFinish={onSubmit}>\r\n            <Input.TextArea \r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder=\"isnert your post\"\r\n            />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imgInput}/>\r\n                <Button onClick={onClickImgUpload}>img upload</Button>\r\n                <Button type=\"primary\" style={{float:\"right\"}} htmlType=\"submit\">짹짹</Button> \r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v)=>(\r\n                    <div key={v} style={{display:\"inline-block\"}}>\r\n                        <img src={v} style={{width:\"200px\"}} alt={v} />\r\n                        <div>\r\n                            <Button>remove</Button>\r\n                        </div>\r\n                    </div>   \r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}