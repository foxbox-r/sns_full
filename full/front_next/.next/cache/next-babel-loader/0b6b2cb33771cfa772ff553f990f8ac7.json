{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from 'redux';\nimport userReducer from \"./userReducer\";\nimport postReducer from \"./postReducer\";\n\nvar index = function index() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  index: index,\n  userReducer: userReducer,\n  postReducer: postReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["C:/WEB/front_next/reducers/index.js"],"names":["HYDRATE","combineReducers","userReducer","postReducer","index","state","action","type","payload","rootReducer"],"mappings":";;;;;;AAAA,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,eAAR,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAmB;AAAA,MAAlBC,KAAkB,uEAAZ,EAAY;AAAA,MAATC,MAAS;;AAC7B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,OAAL;AACI,6CAAWK,KAAX,GAAoBC,MAAM,CAACE,OAA3B;;AACJ;AACI,aAAOH,KAAP;AAJR;AAMH,CAPD;;AASA,IAAMI,WAAW,GAAGR,eAAe,CAAC;AAChCG,EAAAA,KAAK,EAALA,KADgC;AAEhCF,EAAAA,WAAW,EAAXA,WAFgC;AAGhCC,EAAAA,WAAW,EAAXA;AAHgC,CAAD,CAAnC;AAMA,eAAeM,WAAf","sourcesContent":["import {HYDRATE} from \"next-redux-wrapper\";\r\nimport {combineReducers} from 'redux';\r\nimport userReducer from \"./userReducer\";\r\nimport postReducer from \"./postReducer\";\r\n\r\nconst index = (state={},action)=>{\r\n    switch(action.type){\r\n        case HYDRATE:\r\n            return {...state,...action.payload};\r\n        default :\r\n            return state;\r\n    }\r\n} \r\n\r\nconst rootReducer = combineReducers({\r\n    index,\r\n    userReducer,\r\n    postReducer,\r\n})\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}