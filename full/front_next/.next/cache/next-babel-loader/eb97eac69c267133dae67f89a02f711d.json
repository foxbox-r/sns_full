{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"rsua\"\n    },\n    content: \"my first post\",\n    Images: [{\n      src: \"\"\n    }, {\n      src: \"\"\n    }, {\n      src: \"\"\n    }],\n    Comments: [{\n      user: {\n        nickname: \"foxbox\"\n      },\n      content: \"wow good\"\n    }, {\n      user: {\n        nickname: \"rrr\"\n      },\n      content: \"holy shit\"\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nconst ADD_POST = \"postReducer/ADD_POST\";\nexport const addPost = {\n  type: ADD_POST\n};\nconst dummyPost = {\n  id: 2,\n  content: \"this is dummy.\",\n  User: {\n    id: 1,\n    nickname: \"zero\"\n  },\n  Images: [],\n  Comments: []\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["C:/WEB/front_next/reducers/postReducer.js"],"names":["initialState","mainPosts","id","User","nickname","content","Images","src","Comments","user","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","postReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAC,CAAC;AACPC,IAAAA,EAAE,EAAC,CADI;AAEPC,IAAAA,IAAI,EAAC;AACDD,MAAAA,EAAE,EAAC,CADF;AAEDE,MAAAA,QAAQ,EAAC;AAFR,KAFE;AAMPC,IAAAA,OAAO,EAAC,eAND;AAOPC,IAAAA,MAAM,EAAC,CAAC;AACJC,MAAAA,GAAG,EAAC;AADA,KAAD,EAGP;AACIA,MAAAA,GAAG,EAAC;AADR,KAHO,EAMP;AACIA,MAAAA,GAAG,EAAC;AADR,KANO,CAPA;AAgBPC,IAAAA,QAAQ,EAAC,CAAC;AACNC,MAAAA,IAAI,EAAC;AACDL,QAAAA,QAAQ,EAAC;AADR,OADC;AAINC,MAAAA,OAAO,EAAC;AAJF,KAAD,EAKP;AACEI,MAAAA,IAAI,EAAC;AACDL,QAAAA,QAAQ,EAAC;AADR,OADP;AAIEC,MAAAA,OAAO,EAAC;AAJV,KALO;AAhBF,GAAD,CADO;AA6BjBK,EAAAA,UAAU,EAAC,EA7BM;AA8BjBC,EAAAA,SAAS,EAAC;AA9BO,CAArB;AAiCA,MAAMC,QAAQ,GAAG,sBAAjB;AAEA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,IAAI,EAACF;AADc,CAAhB;AAIP,MAAMG,SAAS,GAAG;AACdb,EAAAA,EAAE,EAAC,CADW;AAEdG,EAAAA,OAAO,EAAC,gBAFM;AAGdF,EAAAA,IAAI,EAAC;AACDD,IAAAA,EAAE,EAAC,CADF;AAEDE,IAAAA,QAAQ,EAAC;AAFR,GAHS;AAOdE,EAAAA,MAAM,EAAC,EAPO;AAQdE,EAAAA,QAAQ,EAAC;AARK,CAAlB;;AAWA,MAAMQ,WAAW,GAAG,CAACC,KAAK,GAACjB,YAAP,EAAoBkB,MAApB,KAA6B;AAC7C,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAKF,QAAL;AACI,6CACOK,KADP;AAEIhB,QAAAA,SAAS,EAAC,CAACc,SAAD,EAAW,GAAGE,KAAK,CAAChB,SAApB,CAFd;AAGIU,QAAAA,SAAS,EAAC;AAHd;;AAKJ;AACI,aAAOM,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    mainPosts:[{\r\n        id:1,\r\n        User:{\r\n            id:1,\r\n            nickname:\"rsua\",\r\n        },\r\n        content:\"my first post\",\r\n        Images:[{\r\n            src:\"\"\r\n        },\r\n        {\r\n            src:\"\"\r\n        },\r\n        {\r\n            src:\"\"\r\n        }],\r\n        Comments:[{\r\n            user:{\r\n                nickname:\"foxbox\"\r\n            },\r\n            content:\"wow good\"\r\n        },{\r\n            user:{\r\n                nickname:\"rrr\"\r\n            },\r\n            content:\"holy shit\"\r\n        }],\r\n    }],\r\n    imagePaths:[],\r\n    postAdded:false,\r\n}\r\n\r\nconst ADD_POST = \"postReducer/ADD_POST\";\r\n\r\nexport const addPost = {\r\n    type:ADD_POST\r\n}\r\n\r\nconst dummyPost = {\r\n    id:2,\r\n    content:\"this is dummy.\",\r\n    User:{\r\n        id:1,\r\n        nickname:\"zero\"\r\n    },\r\n    Images:[],\r\n    Comments:[],\r\n}\r\n\r\nconst postReducer = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                mainPosts:[dummyPost,...state.mainPosts],\r\n                postAdded:true,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}