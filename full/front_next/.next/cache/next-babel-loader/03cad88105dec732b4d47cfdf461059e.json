{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(unLikePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(retweet),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPost),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLikePost),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLikePost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchRetweet),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport { CalculatorFilled, PushpinTwoTone } from \"@ant-design/icons\";\nimport { all, fork, takeEvery, put, delay, call } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_ERROR, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_ERROR, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_ERROR, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LIKE_POST_ERROR, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UNLIKE_POST_ERROR, generateDummyPost, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS, UPLOAD_IMAGES_ERROR, RETWEET_REQUEST, RETWEET_SUCCESS, RETWEET_ERROR } from \"../reducers/postReducer\";\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/userReducer\";\nimport axios from \"axios\";\n\nfunction addPostApi(data) {\n  //data:formData : formData는 {}안 감싸고 그냥 넣는다\n  console.log(\"api\");\n  return axios.post(\"/post\", data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostApi, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          put({\n            type: ADD_POST_ERROR,\n            error: _context.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction addCommentApi(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(addCommentApi, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return delay(1000);\n\n        case 6:\n          _context2.next = 8;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 8:\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 14;\n          return put({\n            type: ADD_COMMENT_ERROR,\n            data: _context2.t0\n          });\n\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction loadPostApi(data) {\n  // get 방식은 두번째 인자에 data가 못들어감 그래서 쿼리 스트링으로해야함\n  return axios.get(\"/posts?lastId=\".concat(data, \"&limit=10\"));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostApi, action.data);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 12;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 12;\n          return put({\n            type: LOAD_POST_ERROR,\n            data: _context3.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction likePostApi(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(likePostApi, action.data);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: LIKE_POST_ERROR,\n            data: _context4.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction unLikePostApi(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/like\"));\n}\n\nfunction unLikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unLikePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(unLikePostApi, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 12;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 12;\n          return put({\n            type: UNLIKE_POST_ERROR,\n            data: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction removePostApi(data) {\n  return axios[\"delete\"](\"/post/\".concat(data.id));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(removePostApi, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 8;\n          return put({\n            type: REMOVE_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context6.next = 13;\n          break;\n\n        case 10:\n          _context6.prev = 10;\n          _context6.t0 = _context6[\"catch\"](0);\n          put({\n            type: REMOVE_POST_ERROR,\n            error: _context6.t0\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 10]]);\n}\n\nfunction uploadImagesApi(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(uploadImagesApi, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 12;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 12;\n          return put({\n            type: UPLOAD_IMAGES_ERROR,\n            data: _context7.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction retweetApi(data) {\n  return axios.post(\"/post/\".concat(data, \"/retweet\"), data);\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function retweet$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(retweetApi, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 12;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          _context8.next = 12;\n          return put({\n            type: RETWEET_ERROR,\n            data: _context8.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeEvery(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeEvery(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchLikePost() {\n  return _regeneratorRuntime.wrap(function watchLikePost$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchUnLikePost() {\n  return _regeneratorRuntime.wrap(function watchUnLikePost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeEvery(UNLIKE_POST_REQUEST, unLikePost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeEvery(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime.wrap(function watchRetweet$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPost), fork(watchLikePost), fork(watchUnLikePost), fork(watchRemovePost), fork(watchUploadImages), fork(watchRetweet)]);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}","map":{"version":3,"sources":["C:/WEB/full/front_next/sagas/postSaga.js"],"names":["addPost","addComment","loadPost","likePost","unLikePost","removePost","uploadImages","retweet","watchAddPost","watchAddComment","watchLoadPost","watchLikePost","watchUnLikePost","watchRemovePost","watchUploadImages","watchRetweet","postSaga","CalculatorFilled","PushpinTwoTone","all","fork","takeEvery","put","delay","call","shortId","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_ERROR","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_ERROR","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_ERROR","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_ERROR","generateDummyPost","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_ERROR","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_ERROR","ADD_POST_TO_ME","REMOVE_POST_TO_ME","axios","addPostApi","data","console","log","post","action","result","type","id","error","addCommentApi","postId","loadPostApi","get","likePostApi","patch","unLikePostApi","removePostApi","uploadImagesApi","retweetApi"],"mappings":"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","sourcesContent":["import { CalculatorFilled, PushpinTwoTone } from \"@ant-design/icons\";\r\nimport {all,fork,takeEvery,put,delay,call} from \"redux-saga/effects\"\r\nimport shortId from \"shortid\"\r\nimport {\r\n    ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_ERROR,\r\n    REMOVE_POST_REQUEST,REMOVE_POST_SUCCESS,REMOVE_POST_ERROR,\r\n     ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS,ADD_COMMENT_ERROR,\r\n     LOAD_POST_REQUEST,LOAD_POST_SUCCESS,LOAD_POST_ERROR,\r\n     LIKE_POST_REQUEST,LIKE_POST_SUCCESS,LIKE_POST_ERROR,\r\n     UNLIKE_POST_REQUEST,UNLIKE_POST_SUCCESS,UNLIKE_POST_ERROR,\r\n     generateDummyPost,\r\n     UPLOAD_IMAGES_REQUEST,UPLOAD_IMAGES_SUCCESS,UPLOAD_IMAGES_ERROR,\r\n     RETWEET_REQUEST,RETWEET_SUCCESS,RETWEET_ERROR,\r\n} from \"../reducers/postReducer\"\r\nimport {\r\n    ADD_POST_TO_ME,REMOVE_POST_TO_ME,\r\n} from \"../reducers/userReducer\"\r\n\r\nimport axios from \"axios\";\r\n \r\nfunction addPostApi(data){ //data:formData : formData는 {}안 감싸고 그냥 넣는다\r\n    console.log(\"api\");\r\n    return axios.post(\"/post\",data);\r\n}\r\n\r\nfunction* addPost(action){//(data:formData)\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        yield put({ \r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n        yield put({\r\n            type:ADD_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    } catch(err){\r\n        put({\r\n            type:ADD_POST_ERROR,\r\n            error:err,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction addCommentApi(data){ \r\n    return axios.post(`/post/${data.postId}/comment`,data);\r\n}\r\n\r\nfunction* addComment(action){//(data:{postId,content,userId})\r\n    try{\r\n        const result = yield call(addCommentApi,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n            data:result.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:ADD_COMMENT_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadPostApi(data){\r\n    // get 방식은 두번째 인자에 data가 못들어감 그래서 쿼리 스트링으로해야함\r\n    return axios.get(`/posts?lastId=${data}&limit=10`);\r\n}\r\n\r\nfunction* loadPost(action){//{data:lastId}\r\n    try{\r\n        const result = yield call(loadPostApi,action.data);\r\n        yield put({\r\n            type:LOAD_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:LOAD_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction likePostApi(data){\r\n    return axios.patch(`/post/${data}/like`);\r\n}\r\n\r\nfunction* likePost(action){//{data:postId}\r\n    try{\r\n        const result = yield call(likePostApi,action.data);\r\n        yield put({\r\n            type:LIKE_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:LIKE_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction unLikePostApi(data){\r\n    return axios.delete(`/post/${data}/like`);\r\n}\r\n\r\nfunction* unLikePost(action){//{data:postId}\r\n    try{\r\n        const result = yield call(unLikePostApi,action.data);\r\n        yield put({\r\n            type:UNLIKE_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:UNLIKE_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction removePostApi(data){\r\n    return axios.delete(`/post/${data.id}`);\r\n}\r\n\r\nfunction* removePost(action){//(data:{id})\r\n    try{\r\n        const result = yield call(removePostApi,action.data);\r\n        yield put({\r\n            type:REMOVE_POST_SUCCESS,\r\n            data:result.data\r\n        })\r\n        yield put({\r\n            type:REMOVE_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    } catch(err){\r\n        put({\r\n            type:REMOVE_POST_ERROR,\r\n            error:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction uploadImagesApi(data){\r\n    return axios.post(`/post/images`,data);\r\n}\r\n\r\nfunction* uploadImages(action){//{data:imageFormData}\r\n    try{\r\n        const result = yield call(uploadImagesApi,action.data);\r\n        yield put({\r\n            type:UPLOAD_IMAGES_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:UPLOAD_IMAGES_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction retweetApi(data){\r\n    return axios.post(`/post/${data}/retweet`,data);\r\n}\r\n\r\nfunction* retweet(action){//{data:postId}\r\n    try{\r\n        const result = yield call(retweetApi,action.data);\r\n        yield put({\r\n            type:RETWEET_SUCCESS,\r\n            data:result.data\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:RETWEET_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\nfunction* watchAddPost(){\r\n    yield takeEvery(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeEvery(ADD_COMMENT_REQUEST,addComment)\r\n}\r\n\r\nfunction* watchLoadPost(){\r\n    yield takeEvery(LOAD_POST_REQUEST,loadPost);\r\n}\r\n\r\nfunction* watchLikePost(){\r\n    yield takeEvery(LIKE_POST_REQUEST,likePost);\r\n}\r\n\r\nfunction* watchUnLikePost(){\r\n    yield takeEvery(UNLIKE_POST_REQUEST,unLikePost);\r\n}\r\n\r\nfunction* watchRemovePost(){\r\n    yield takeEvery(REMOVE_POST_REQUEST,removePost);\r\n}\r\nfunction* watchUploadImages(){\r\n    yield takeEvery(UPLOAD_IMAGES_REQUEST,uploadImages);\r\n}\r\nfunction* watchRetweet(){\r\n    yield takeEvery(RETWEET_REQUEST,retweet);\r\n}\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchRemovePost),\r\n        fork(watchLoadPost),\r\n        fork(watchLikePost),\r\n        fork(watchUnLikePost),\r\n        fork(watchRemovePost),\r\n        fork(watchUploadImages),\r\n        fork(watchRetweet),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}