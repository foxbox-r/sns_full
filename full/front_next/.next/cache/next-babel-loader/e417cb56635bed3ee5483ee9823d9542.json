{"ast":null,"code":"import { PushpinTwoTone } from \"@ant-design/icons\";\nimport { all, fork, takeEvery, delay, call, put } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_ERROR, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_ERROR, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_ERROR, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_ERROR, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_ERROR } from \"../reducers/userReducer\";\nimport axios from \"axios\";\nimport { backAddress } from \"../back\";\n\nfunction logInApi(data) {\n  return axios.post(`/login`, data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    put({\n      type: LOG_OUT_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction signUpApi(data) {\n  return axios.post(`/user`, data); // return axios.post(`http://localhost:3065/user`,data);\n}\n\nfunction* signUp(action) {\n  //{data:{email,password,nickname}}\n  try {\n    const result = yield call(signUpApi, action.data);\n    console.log(result);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* follow(action) {\n  // {data:{postUserId}}\n  try {\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* unFollow(action) {\n  //{data:{postUserId}}\n  try {\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchFollow() {\n  yield takeEvery(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnFollow() {\n  yield takeEvery(UNFOLLOW_REQUEST, unFollow);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow), fork(watchUnFollow)]);\n}","map":{"version":3,"sources":["C:/WEB/front_next/sagas/userSaga.js"],"names":["PushpinTwoTone","all","fork","takeEvery","delay","call","put","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_ERROR","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_ERROR","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_ERROR","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_ERROR","axios","backAddress","logInApi","data","post","logIn","action","type","err","logOut","signUpApi","signUp","result","console","log","follow","unFollow","watchLogIn","watchLogOut","watchSignUp","watchFollow","watchUnFollow","userSaga"],"mappings":"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","sourcesContent":["import { PushpinTwoTone } from \"@ant-design/icons\";\r\nimport {all,fork,takeEvery,delay,call,put} from \"redux-saga/effects\";\r\nimport {\r\n    LOG_IN_REQUEST,LOG_IN_SUCCESS,LOG_IN_ERROR,\r\n    LOG_OUT_REQUEST,LOG_OUT_SUCCESS,LOG_OUT_ERROR,\r\n    SIGN_UP_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_ERROR,\r\n    FOLLOW_REQUEST,FOLLOW_SUCCESS,FOLLOW_ERROR,\r\n    UNFOLLOW_REQUEST,UNFOLLOW_SUCCESS,UNFOLLOW_ERROR,\r\n} from \"../reducers/userReducer\"\r\nimport axios from \"axios\"\r\nimport {backAddress} from \"../back\"\r\n\r\nfunction logInApi(data){\r\n    return axios.post(`/login`,data);\r\n}\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type:LOG_IN_ERROR,\r\n            data:err\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS\r\n        });\r\n    } catch(err){\r\n        put({\r\n            type:LOG_OUT_ERROR,\r\n            data:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpApi(data){\r\n    return axios.post(`/user`,data);\r\n    // return axios.post(`http://localhost:3065/user`,data);\r\n}\r\n\r\nfunction* signUp(action){//{data:{email,password,nickname}}\r\n    try{\r\n        const result = yield call(signUpApi,action.data);\r\n        console.log(result);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:SIGN_UP_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* follow(action){// {data:{postUserId}}\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:FOLLOW_SUCCESS,\r\n            data:action.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:FOLLOW_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* unFollow(action){//{data:{postUserId}}\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:UNFOLLOW_SUCCESS,\r\n            data:action.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:UNFOLLOW_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn(){\r\n    yield takeEvery(LOG_IN_REQUEST,logIn);\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeEvery(LOG_OUT_REQUEST,logOut);\r\n}\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST,signUp);\r\n}\r\nfunction* watchFollow(){\r\n    yield takeEvery(FOLLOW_REQUEST,follow);\r\n}\r\nfunction* watchUnFollow(){\r\n    yield takeEvery(UNFOLLOW_REQUEST,unFollow);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n        fork(watchUnFollow),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}