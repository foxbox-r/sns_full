{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas\";\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(compose(applyMiddleware.apply(void 0, middlewares)));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/WEB/front_next/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","createSagaMiddleware","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAEC,QAAF,QAAEA,QAAF;AAAA,MAAWC,QAAX,QAAWA,QAAX;AAAA,SAAyB,UAACC,IAAD;AAAA,WAAQ,UAACC,MAAD,EAAU;AAChEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,aAAOD,IAAI,CAACC,MAAD,CAAX;AACH,KAHiD;AAAA,GAAzB;AAAA,CAAzB;;AAKA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACvB,MAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,MAAMW,WAAW,GAAG,CAACD,cAAD,EAAgBR,gBAAhB,CAApB;AACA,MAAMU,QAAQ,GAAG,QACff,OAAO,CAACD,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CADQ,GAEfb,mBAAmB,CAACD,OAAO,CAACD,eAAe,MAAf,SAAmBe,WAAnB,CAAD,CAAR,CAFrB;AAGA,MAAME,KAAK,GAAGlB,WAAW,CAACI,OAAD,EAASa,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;AACA,SAAOY,KAAP;AACH,CATD;;AAWA,IAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAgB;AACzCQ,EAAAA,KAAK;AADoC,CAAhB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport {createStore,applyMiddleware,compose} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport reducer from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\"\r\nimport rootSaga from \"../sagas\"\r\n\r\nconst loggerMiddleware = ({dispatch,getState}) => (next)=>(action)=>{\r\n    console.log(action);\r\n    return next(action);\r\n};\r\n\r\nconst configureStore = ()=>{\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware,loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === \"production\"\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(compose(applyMiddleware(...middlewares)));\r\n    const store = createStore(reducer,enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug:process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}