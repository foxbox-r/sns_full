{"ast":null,"code":"import { PushpinTwoTone } from \"@ant-design/icons\";\nimport { all, fork, takeEvery, delay, put } from \"redux-saga/effects\";\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_ERROR, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_ERROR, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_ERROR } from \"../reducers/userReducer\";\n\nfunction* logIn(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* logOut(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    put({\n      type: LOG_OUT_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* signUp(action) {\n  try {\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeEvery(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeEvery(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"sources":["C:/WEB/front_next/sagas/userSaga.js"],"names":["PushpinTwoTone","all","fork","takeEvery","delay","put","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_ERROR","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_ERROR","logIn","action","type","err","data","logOut","signUp","watchLogIn","watchLogOut","watchSignUp","userSaga"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,SAAjB,EAA2BC,KAA3B,EAAiCC,GAAjC,QAA2C,oBAA3C;AACA,SACIC,cADJ,EACmBC,cADnB,EACkCC,YADlC,EAEIC,eAFJ,EAEoBC,eAFpB,EAEoCC,aAFpC,EAGIC,eAHJ,EAGoBC,eAHpB,EAGoCC,aAHpC,QAIO,yBAJP;;AAMA,UAAUC,KAAV,CAAgBC,MAAhB,EAAuB;AACnB,MAAG;AACC,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACV;AADC,KAAD,CAAT;AAGH,GALD,CAKE,OAAMW,GAAN,EAAU;AACR,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACT,YADC;AAENW,MAAAA,IAAI,EAACD;AAFC,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUE,MAAV,CAAiBJ,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACP;AADC,KAAD,CAAT;AAGH,GALD,CAKE,OAAMQ,GAAN,EAAU;AACRb,IAAAA,GAAG,CAAC;AACAY,MAAAA,IAAI,EAACN,aADL;AAEAQ,MAAAA,IAAI,EAACD;AAFL,KAAD,CAAH;AAIH;AACJ;;AAED,UAAUG,MAAV,CAAiBL,MAAjB,EAAwB;AACpB,MAAG;AACC,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACJ;AADC,KAAD,CAAT;AAIH,GAND,CAME,OAAMK,GAAN,EAAU;AACR,UAAMb,GAAG,CAAC;AACNY,MAAAA,IAAI,EAACH,aADC;AAENK,MAAAA,IAAI,EAACD;AAFC,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUI,UAAV,GAAsB;AAClB,QAAMnB,SAAS,CAACG,cAAD,EAAgBS,KAAhB,CAAf;AACH;;AACD,UAAUQ,WAAV,GAAuB;AACnB,QAAMpB,SAAS,CAACM,eAAD,EAAiBW,MAAjB,CAAf;AACH;;AACD,UAAUI,WAAV,GAAuB;AACnB,QAAMrB,SAAS,CAACS,eAAD,EAAiBS,MAAjB,CAAf;AACH;;AAED,eAAe,UAAUI,QAAV,GAAoB;AAC/B,QAAMxB,GAAG,CAAC,CACNC,IAAI,CAACoB,UAAD,CADE,EAENpB,IAAI,CAACqB,WAAD,CAFE,EAGNrB,IAAI,CAACsB,WAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import { PushpinTwoTone } from \"@ant-design/icons\";\r\nimport {all,fork,takeEvery,delay,put} from \"redux-saga/effects\";\r\nimport {\r\n    LOG_IN_REQUEST,LOG_IN_SUCCESS,LOG_IN_ERROR,\r\n    LOG_OUT_REQUEST,LOG_OUT_SUCCESS,LOG_OUT_ERROR,\r\n    SIGN_UP_REQUEST,SIGN_UP_SUCCESS,SIGN_UP_ERROR,\r\n} from \"../reducers/userReducer\"\r\n\r\nfunction* logIn(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_IN_SUCCESS\r\n        });\r\n    } catch(err){\r\n        yield put({\r\n            type:LOG_IN_ERROR,\r\n            data:err\r\n        });\r\n    }\r\n}\r\n\r\nfunction* logOut(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOG_OUT_SUCCESS\r\n        });\r\n    } catch(err){\r\n        put({\r\n            type:LOG_OUT_ERROR,\r\n            data:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp(action){\r\n    try{\r\n        yield delay(1000);\r\n        yield put({\r\n            type:SIGN_UP_SUCCESS,\r\n            \r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:SIGN_UP_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogIn(){\r\n    yield takeEvery(LOG_IN_REQUEST,logIn);\r\n}\r\nfunction* watchLogOut(){\r\n    yield takeEvery(LOG_OUT_REQUEST,logOut);\r\n}\r\nfunction* watchSignUp(){\r\n    yield takeEvery(SIGN_UP_REQUEST,signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}