{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(compose(applyMiddleware(...middlewares)));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"rrr\"\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/WEB/front_next/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","composeWithDevTools","reducer","thunkMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","middlewares","enhancer","store","type","data","wrapper","debug"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,oBAA5B;AACA,SAAQC,WAAR,EAAoBC,eAApB,EAAoCC,OAApC,QAAkD,OAAlD;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,eAAP,MAA4B,aAA5B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAUC,EAAAA;AAAV,CAAD,KAA0BC,IAAD,IAASC,MAAD,IAAU;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACH,CAHD;;AAKA,MAAMG,cAAc,GAAG,MAAI;AACvB,QAAMC,WAAW,GAAG,CAACT,eAAD,CAApB;AACA,QAAMU,QAAQ,GAAG,QACfb,OAAO,CAACD,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CADQ,GAEfX,mBAAmB,CAACD,OAAO,CAACD,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAAR,CAFrB;AAGA,QAAME,KAAK,GAAGhB,WAAW,CAACI,OAAD,EAASW,QAAT,CAAzB;AACAC,EAAAA,KAAK,CAACT,QAAN,CAAe;AACXU,IAAAA,IAAI,EAAC,iBADM;AAEXC,IAAAA,IAAI,EAAC;AAFM,GAAf;AAKA,SAAOF,KAAP;AACH,CAZD;;AAcA,MAAMG,OAAO,GAAGpB,aAAa,CAACc,cAAD,EAAgB;AACzCO,EAAAA,KAAK;AADoC,CAAhB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import {createWrapper} from \"next-redux-wrapper\";\r\nimport {createStore,applyMiddleware,compose} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\"\r\nimport reducer from \"../reducers\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst loggerMiddleware = ({dispatch,getState}) => (next)=>(action)=>{\r\n    console.log(action);\r\n    return next(action);\r\n};\r\n\r\nconst configureStore = ()=>{\r\n    const middlewares = [thunkMiddleware];\r\n    const enhancer = process.env.NODE_ENV === \"production\"\r\n    ? compose(applyMiddleware(...middlewares))\r\n    : composeWithDevTools(compose(applyMiddleware(...middlewares)));\r\n    const store = createStore(reducer,enhancer);\r\n    store.dispatch({\r\n        type:\"CHANGE_NICKNAME\",\r\n        data:\"rrr\"\r\n    });\r\n\r\n    return store;\r\n}\r\n\r\nconst wrapper = createWrapper(configureStore,{\r\n    debug:process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}