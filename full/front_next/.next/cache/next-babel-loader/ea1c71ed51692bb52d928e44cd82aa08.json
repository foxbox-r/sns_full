{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WEB\\\\full\\\\front_next\\\\components\\\\PostCard.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { Button, Card, Popover, Avatar, List, Comment } from \"antd\";\nimport { RetweetOutlined, HeartTwoTone, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport PostImages from \"../components/PostImages\";\nimport CommentForm from \"../components/CommentForm\";\nimport PostCardContent from \"../components/PostCardContent\";\nimport { removePostRequestAction, LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, RETWEET_REQUEST } from \"../reducers/postReducer\";\nimport FollowButton from \"./FollowButton\";\n\nfunction PostCard({\n  post\n}) {\n  const {\n    0: commentFormOpened,\n    1: setCommentFormOpenend\n  } = useState(false);\n  const {\n    me\n  } = useSelector(state => state.userReducer);\n  const {\n    removePostLoading,\n    retweetError\n  } = useSelector(state => state.postReducer);\n  const dispatch = useDispatch();\n  const id = me === null || me === void 0 ? void 0 : me.id; //  me && me.id \n  // useEffect(()=>{\n  //     if(retweetError){\n  //         alert(retweetError);\n  //     }\n  // },[retweetError])\n\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const onUnLike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  const liked = post.Likers.find(user => user.id === id);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpenend(prev => !prev);\n  }, []);\n  const onRemovePost = useCallback(id => {\n    dispatch(removePostRequestAction({\n      id\n    }));\n  }, []);\n  const onRetweet = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인하세요.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              loading: false,\n              type: \"danger\",\n              onClick: () => onRemovePost(post.id),\n              children: removePostLoading ? \"로딩...\" : \"삭제\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)],\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 30\n      }, this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 42\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this),\n          title: post.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: `${post.Comments.length}개의 댓글`,\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Comment, {\n            author: item.nickname,\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: item.User.nickname[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 45\n            }, this),\n            content: item.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\nexport default PostCard;","map":{"version":3,"sources":["C:/WEB/full/front_next/components/PostCard.js"],"names":["React","useState","useCallback","useEffect","Button","Card","Popover","Avatar","List","Comment","RetweetOutlined","HeartTwoTone","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","useDispatch","PostImages","CommentForm","PostCardContent","removePostRequestAction","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","RETWEET_REQUEST","FollowButton","PostCard","post","commentFormOpened","setCommentFormOpenend","me","state","userReducer","removePostLoading","retweetError","postReducer","dispatch","id","onLike","type","data","onUnLike","liked","Likers","find","user","onToggleComment","prev","onRemovePost","onRetweet","alert","Images","User","RetweetId","Retweet","nickname","content","Comments","length","item"],"mappings":"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","sourcesContent":["import React,{useState,useCallback, useEffect} from 'react';\r\nimport {Button, Card,Popover,Avatar,List,Comment} from \"antd\"\r\nimport {RetweetOutlined,HeartTwoTone,HeartOutlined,MessageOutlined,EllipsisOutlined} from \"@ant-design/icons\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport PostImages from \"../components/PostImages\"\r\nimport CommentForm from \"../components/CommentForm\"\r\nimport PostCardContent from \"../components/PostCardContent\"\r\nimport {removePostRequestAction,LIKE_POST_REQUEST,UNLIKE_POST_REQUEST,RETWEET_REQUEST} from \"../reducers/postReducer\"\r\nimport FollowButton from \"./FollowButton\"\r\n\r\nfunction PostCard({post}){\r\n\r\n    const [commentFormOpened,setCommentFormOpenend] = useState(false);\r\n    const {me} = useSelector(state=>state.userReducer);\r\n    const {removePostLoading,retweetError}  = useSelector(state=>state.postReducer);\r\n    const dispatch = useDispatch();\r\n    const id = me?.id;//  me && me.id \r\n\r\n    // useEffect(()=>{\r\n    //     if(retweetError){\r\n    //         alert(retweetError);\r\n    //     }\r\n    // },[retweetError])\r\n\r\n    const onLike = useCallback(()=>{\r\n        dispatch({\r\n            type:LIKE_POST_REQUEST,\r\n            data:post.id\r\n        })\r\n    },[])\r\n\r\n    const onUnLike = useCallback(()=>{\r\n        dispatch({\r\n            type:UNLIKE_POST_REQUEST,\r\n            data:post.id\r\n        })\r\n    },[])\r\n\r\n    const liked = post.Likers.find(user => user.id === id);\r\n\r\n    const onToggleComment = useCallback(()=>{\r\n        setCommentFormOpenend(prev=>!prev);\r\n    },[])\r\n    const onRemovePost = useCallback((id)=>{\r\n        dispatch(removePostRequestAction({id}));\r\n    },[]);\r\n\r\n    const onRetweet = useCallback(()=>{\r\n        if(!id){\r\n            return alert(\"로그인하세요.\");\r\n        }\r\n        return dispatch({\r\n            type:RETWEET_REQUEST,\r\n            data:post.id,\r\n        })\r\n    },[id])\r\n\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n                actions={[\r\n                    <RetweetOutlined onClick={onRetweet} key=\"retweet\" />,\r\n                    (liked ? <HeartTwoTone twoToneColor=\"#eb2f96\"  onClick={onUnLike} key=\"heart\"/>:<HeartOutlined onClick={onLike} key=\"heart\"/>),\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ?\r\n                            <>\r\n                                <Button>수정</Button>\r\n                                <Button loading={false} type=\"danger\" onClick={()=>onRemovePost(post.id)}>{removePostLoading?\"로딩...\":\"삭제\"}</Button>\r\n                            </>:<Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n                extra={id && <FollowButton post={post} />}\r\n            >\r\n             {post.RetweetId && post.Retweet?\r\n             (<Card\r\n                cover={post.Images[0] && <PostImages images={post.Images}/>}\r\n             >\r\n                <Card.Meta \r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={<PostCardContent postData={post.content} />}\r\n            />\r\n             </Card>)\r\n             :(<Card.Meta \r\n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                title={post.User.nickname}\r\n                description={<PostCardContent postData={post.content} />}\r\n            />)}\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List \r\n                        header={`${post.Comments.length}개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={(item)=>(\r\n                            <li>\r\n                                <Comment \r\n                                    author={item.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}