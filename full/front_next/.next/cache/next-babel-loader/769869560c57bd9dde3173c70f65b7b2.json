{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, fork, take, takeEvery, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI() {\n  return axios.post(\"api/login\");\n}\n\nfunction logIn() {\n  var result;\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return cal(logInAPI);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: \"LOG_IN_SUCCESS\",\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: \"LOG_IN_FAILURE\",\n            data: err\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(\"LOG_IN_REQUEST\", logIn);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["C:/WEB/front_next/sagas/index.js"],"names":["logIn","watchLogIn","rootSaga","all","fork","take","takeEvery","put","axios","logInAPI","post","cal","result","type","data","err","watchLogOut","watchAddPost"],"mappings":";;oDAOUA,K;qDAeAC,U;qDAMeC,Q;;AA5BzB,SAAQC,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,SAAtB,EAAgCC,GAAhC,QAA0C,oBAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAmB;AACf,SAAOD,KAAK,CAACE,IAAN,CAAW,WAAX,CAAP;AACH;;AAED,SAAUV,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEuB,iBAAMW,GAAG,CAACF,QAAD,CAAT;;AAFvB;AAEcG,UAAAA,MAFd;AAAA;AAGQ,iBAAML,GAAG,CAAC;AACNM,YAAAA,IAAI,EAAC,gBADC;AAENC,YAAAA,IAAI,EAACF,MAAM,CAACE;AAFN,WAAD,CAAT;;AAHR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQQ,iBAAMP,GAAG,CAAC;AACNM,YAAAA,IAAI,EAAC,gBADC;AAENC,YAAAA,IAAI,EAACC;AAFC,WAAD,CAAT;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,SAAUd,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMK,SAAS,CAAC,gBAAD,EAAkBN,KAAlB,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAe,SAAUE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMC,GAAG,CAAC,CACNC,IAAI,CAACH,UAAD,CADE,EAENG,IAAI,CAACY,WAAD,CAFE,EAGNZ,IAAI,CAACa,YAAD,CAHE,CAAD,CAAT;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {all,fork,take,takeEvery,put} from \"redux-saga/effects\"\r\nimport axios from \"axios\"\r\n\r\nfunction logInAPI(){\r\n    return axios.post(\"api/login\");\r\n}\r\n\r\nfunction* logIn(){\r\n    try{\r\n        const result = yield cal(logInAPI);\r\n        yield put({\r\n            type:\"LOG_IN_SUCCESS\",\r\n            data:result.data\r\n        })\r\n    } catch(e){\r\n        yield put({\r\n            type:\"LOG_IN_FAILURE\",\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogIn(){\r\n    yield takeEvery(\"LOG_IN_REQUEST\",logIn);\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchAddPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}