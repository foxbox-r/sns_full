{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\WEB\\\\full\\\\front_next\\\\pages\\\\index.js\";\nimport React, { useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Head from \"next/head\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../reducers/postReducer\";\nimport { LOAD_USER_REQUEST } from \"../reducers/userReducer\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from \"redux-saga\";\n\nfunction index() {\n  const {\n    logInDone\n  } = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostLoading\n  } = useSelector(state => state.postReducer);\n  useEffect(() => {}, []);\n  useEffect(() => {\n    function onScroll(e) {\n      const result = Math.floor(window.scrollY + document.documentElement.clientHeight) >= document.documentElement.scrollHeight - 300;\n\n      if (result && hasMorePosts && !loadPostLoading) {\n        var _mainPosts;\n\n        const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n        dispatch({\n          type: LOAD_POST_REQUEST,\n          data: lastId\n        });\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostLoading, mainPosts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [logInDone && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 31\n      }, this), mainPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostCard, {\n        post: post\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 46\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} // index 콤포넌트보다 앞에 실행 됨 browser => client_server(현재) => back_server\n\n\nexport const getServerSideProps = wrapper.getServerSideProps(context => {\n  context.store.dispatch({\n    type: LOAD_USER_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POST_REQUEST\n  });\n  context.store.dispatch(END);\n});\nexport default index;","map":{"version":3,"sources":["C:/WEB/full/front_next/pages/index.js"],"names":["React","useEffect","AppLayout","useSelector","useDispatch","Head","PostCard","PostForm","LOAD_POST_REQUEST","LOAD_USER_REQUEST","wrapper","END","index","logInDone","state","userReducer","dispatch","mainPosts","hasMorePosts","loadPostLoading","postReducer","onScroll","e","result","Math","floor","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","data","addEventListener","removeEventListener","map","post","getServerSideProps","context","store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,iBAAR,QAAgC,yBAAhC;AACA,SAAQC,iBAAR,QAAgC,yBAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,GAAR,QAAkB,YAAlB;;AAEA,SAASC,KAAT,GAAgB;AACZ,QAAM;AAACC,IAAAA;AAAD,MAAcV,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACC,WAAd,CAA/B;AACA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM;AAACa,IAAAA,SAAD;AAAWC,IAAAA,YAAX;AAAwBC,IAAAA;AAAxB,MAA2ChB,WAAW,CAACW,KAAK,IAAEA,KAAK,CAACM,WAAd,CAA5D;AAEAnB,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEP,EAFO,CAAT;AAIAA,EAAAA,SAAS,CAAC,MAAI;AACV,aAASoB,QAAT,CAAkBC,CAAlB,EAAoB;AAChB,YAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,OAAP,GAAeC,QAAQ,CAACC,eAAT,CAAyBC,YAAnD,KAAkEF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC,GAAvH;;AACA,UAAGR,MAAM,IAAIL,YAAV,IAA0B,CAACC,eAA9B,EAA8C;AAAA;;AAC1C,cAAMa,MAAM,iBAAGf,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAiB,CAAlB,CAAZ,+CAAG,WAA+BC,EAA9C;AACAlB,QAAAA,QAAQ,CAAC;AACLmB,UAAAA,IAAI,EAAC3B,iBADA;AAEL4B,UAAAA,IAAI,EAACJ;AAFA,SAAD,CAAR;AAIH;AACJ;;AACDN,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAiChB,QAAjC;AACA,WAAO,MAAI;AACPK,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAoCjB,QAApC;AACH,KAFD;AAGH,GAfQ,EAeP,CAACH,YAAD,EAAcC,eAAd,EAA8BF,SAA9B,CAfO,CAAT;AAiBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAA,iBACKJ,SAAS,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADlB,EAEKI,SAAS,CAACsB,GAAV,CAAc,CAACC,IAAD,EAAM5B,KAAN,kBAAc,QAAC,QAAD;AAAsB,QAAA,IAAI,EAAE4B;AAA5B,SAAe5B,KAAf;AAAA;AAAA;AAAA;AAAA,cAA5B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAWH,C,CAED;;;AACA,OAAO,MAAM6B,kBAAkB,GAAG/B,OAAO,CAAC+B,kBAAR,CAA4BC,OAAD,IAAW;AACpEA,EAAAA,OAAO,CAACC,KAAR,CAAc3B,QAAd,CAAuB;AACnBmB,IAAAA,IAAI,EAAC1B;AADc,GAAvB;AAGAiC,EAAAA,OAAO,CAACC,KAAR,CAAc3B,QAAd,CAAuB;AACnBmB,IAAAA,IAAI,EAAC3B;AADc,GAAvB;AAGAkC,EAAAA,OAAO,CAACC,KAAR,CAAc3B,QAAd,CAAuBL,GAAvB;AACH,CARiC,CAA3B;AAUP,eAAeC,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from \"../components/AppLayout\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport Head from \"next/head\"\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\"\r\nimport {LOAD_POST_REQUEST} from \"../reducers/postReducer\"\r\nimport {LOAD_USER_REQUEST} from \"../reducers/userReducer\"\r\nimport wrapper from \"../store/configureStore\"\r\nimport {END} from \"redux-saga\"\r\n\r\nfunction index(){\r\n    const {logInDone} = useSelector(state=>state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const {mainPosts,hasMorePosts,loadPostLoading} = useSelector(state=>state.postReducer);\r\n\r\n    useEffect(()=>{\r\n       \r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        function onScroll(e){\r\n            const result = Math.floor(window.scrollY+document.documentElement.clientHeight)>=document.documentElement.scrollHeight-300;\r\n            if(result && hasMorePosts && !loadPostLoading){\r\n                const lastId = mainPosts[mainPosts.length-1]?.id;\r\n                dispatch({\r\n                    type:LOAD_POST_REQUEST,\r\n                    data:lastId,\r\n                })\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\",onScroll);\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",onScroll);\r\n        }\r\n    },[hasMorePosts,loadPostLoading,mainPosts])\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>home</title>\r\n            </Head>\r\n            <AppLayout>\r\n                {logInDone && <PostForm />}\r\n                {mainPosts.map((post,index)=><PostCard key={index} post={post} />) }\r\n            </AppLayout>\r\n        </>\r\n    )\r\n}\r\n\r\n// index 콤포넌트보다 앞에 실행 됨 browser => client_server(현재) => back_server\r\nexport const getServerSideProps = wrapper.getServerSideProps((context)=>{\r\n    context.store.dispatch({\r\n        type:LOAD_USER_REQUEST,\r\n    })\r\n    context.store.dispatch({\r\n        type:LOAD_POST_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n});\r\n\r\nexport default index;"]},"metadata":{},"sourceType":"module"}