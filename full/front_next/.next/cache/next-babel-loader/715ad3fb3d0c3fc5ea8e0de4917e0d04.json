{"ast":null,"code":"import { all, fork, take, takeEvery, takeLatest, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction logInAPI() {\n  return axios.post(\"api/login\");\n}\n\nfunction* logIn() {\n  try {\n    const result = yield cal(logInAPI);\n    yield put({\n      type: \"LOG_IN_SUCCESS\",\n      data: result.data\n    });\n  } catch (e) {\n    yield put({\n      type: \"LOG_IN_FAILURE\",\n      data: err\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeEvery(\"LOG_IN_REQUEST\", logIn);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/WEB/front_next/sagas/index.js"],"names":["all","fork","take","takeEvery","takeLatest","put","axios","logInAPI","post","logIn","result","cal","type","data","e","err","watchLogIn","rootSaga","watchLogOut","watchAddPost"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAiBC,IAAjB,EAAsBC,SAAtB,EAAgCC,UAAhC,EAA2CC,GAA3C,QAAqD,oBAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,GAAmB;AACf,SAAOD,KAAK,CAACE,IAAN,CAAW,WAAX,CAAP;AACH;;AAED,UAAUC,KAAV,GAAiB;AACb,MAAG;AACC,UAAMC,MAAM,GAAG,MAAMC,GAAG,CAACJ,QAAD,CAAxB;AACA,UAAMF,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAC,gBADC;AAENC,MAAAA,IAAI,EAACH,MAAM,CAACG;AAFN,KAAD,CAAT;AAIH,GAND,CAME,OAAMC,CAAN,EAAQ;AACN,UAAMT,GAAG,CAAC;AACNO,MAAAA,IAAI,EAAC,gBADC;AAENC,MAAAA,IAAI,EAACE;AAFC,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUC,UAAV,GAAsB;AAClB,QAAMb,SAAS,CAAC,gBAAD,EAAkBM,KAAlB,CAAf;AACH;;AAID,eAAe,UAAUQ,QAAV,GAAoB;AAC/B,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACe,UAAD,CADE,EAENf,IAAI,CAACiB,WAAD,CAFE,EAGNjB,IAAI,CAACkB,YAAD,CAHE,CAAD,CAAT;AAKH","sourcesContent":["import {all,fork,take,takeEvery,takeLatest,put} from \"redux-saga/effects\"\r\nimport axios from \"axios\"\r\n\r\nfunction logInAPI(){\r\n    return axios.post(\"api/login\");\r\n}\r\n\r\nfunction* logIn(){\r\n    try{\r\n        const result = yield cal(logInAPI);\r\n        yield put({\r\n            type:\"LOG_IN_SUCCESS\",\r\n            data:result.data\r\n        })\r\n    } catch(e){\r\n        yield put({\r\n            type:\"LOG_IN_FAILURE\",\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLogIn(){\r\n    yield takeEvery(\"LOG_IN_REQUEST\",logIn);\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchAddPost),\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}