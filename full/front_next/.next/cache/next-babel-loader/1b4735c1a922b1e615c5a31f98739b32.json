{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\WEB\\\\front_next\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport AppLayout from \"../components/AppLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Head from \"next/head\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POST_REQUEST } from \"../reducers/postReducer\";\nimport { LOAD_USER_REQUEST } from \"../reducers/userReducer\";\n\nfunction index() {\n  _s();\n\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.userReducer;\n  }),\n      logInDone = _useSelector.logInDone;\n\n  var dispatch = useDispatch();\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.postReducer;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePosts = _useSelector2.hasMorePosts,\n      loadPostLoading = _useSelector2.loadPostLoading;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POST_REQUEST\n    });\n  }, []);\n  useEffect(function () {\n    function onScroll(e) {\n      // console.log(window.scrollY,document.documentElement.clientHeight,document.documentElement.scrollHeight)\n      var result = Math.floor(window.scrollY + document.documentElement.clientHeight) >= document.documentElement.scrollHeight - 300; // console.log(Math.floor(window.scrollY+document.documentElement.clientHeight),document.documentElement.scrollHeight-300)\n      // console.log(result);\n\n      if (result && hasMorePosts && !loadPostLoading) {\n        dispatch({\n          type: LOAD_POST_REQUEST\n        });\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [logInDone && /*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 31\n      }, this), mainPosts.map(function (post, index) {\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 46\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(index, \"Y66hNiHZMrN0XFnMSF//xnsqJnQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\nexport default index;","map":{"version":3,"sources":["C:/WEB/front_next/pages/index.js"],"names":["React","useEffect","AppLayout","useSelector","useDispatch","Head","PostCard","PostForm","LOAD_POST_REQUEST","LOAD_USER_REQUEST","index","state","userReducer","logInDone","dispatch","postReducer","mainPosts","hasMorePosts","loadPostLoading","type","onScroll","e","result","Math","floor","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","post","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,iBAAR,QAAgC,yBAAhC;AACA,SAAQC,iBAAR,QAAgC,yBAAhC;;AACA,SAASC,KAAT,GAAgB;AAAA;;AAAA;;AAAA,qBACQP,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAEA,KAAK,CAACC,WAAR;AAAA,GAAN,CADnB;AAAA,MACLC,SADK,gBACLA,SADK;;AAEZ,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAFY,sBAGqCD,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAEA,KAAK,CAACI,WAAR;AAAA,GAAN,CAHhD;AAAA,MAGLC,SAHK,iBAGLA,SAHK;AAAA,MAGKC,YAHL,iBAGKA,YAHL;AAAA,MAGkBC,eAHlB,iBAGkBA,eAHlB;;AAKZjB,EAAAA,SAAS,CAAC,YAAI;AACVa,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACV;AADA,KAAD,CAAR;AAGAK,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAACX;AADA,KAAD,CAAR;AAGH,GAPQ,EAOP,EAPO,CAAT;AASAP,EAAAA,SAAS,CAAC,YAAI;AACV,aAASmB,QAAT,CAAkBC,CAAlB,EAAoB;AAChB;AACA,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,OAAP,GAAeC,QAAQ,CAACC,eAAT,CAAyBC,YAAnD,KAAkEF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAsC,GAAvH,CAFgB,CAGhB;AACA;;AACA,UAAGR,MAAM,IAAIL,YAAV,IAA0B,CAACC,eAA9B,EAA8C;AAC1CJ,QAAAA,QAAQ,CAAC;AACLK,UAAAA,IAAI,EAACX;AADA,SAAD,CAAR;AAGH;AACJ;;AACDiB,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAiCX,QAAjC;AACA,WAAO,YAAI;AACPK,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAoCZ,QAApC;AACH,KAFD;AAGH,GAhBQ,EAgBP,CAACH,YAAD,EAAcC,eAAd,CAhBO,CAAT;AAkBA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,SAAD;AAAA,iBACKL,SAAS,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADlB,EAEKG,SAAS,CAACiB,GAAV,CAAc,UAACC,IAAD,EAAMxB,KAAN;AAAA,4BAAc,QAAC,QAAD;AAAwB,UAAA,IAAI,EAAEwB;AAA9B,WAAeA,IAAI,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,iBAAd;AAAA,OAAd,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAWH;;GA3CQzB,K;UACeP,W,EACHC,W,EACgCD,W;;;AA0CrD,eAAeO,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport AppLayout from \"../components/AppLayout\"\r\nimport {useSelector,useDispatch} from \"react-redux\"\r\nimport Head from \"next/head\"\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\"\r\nimport {LOAD_POST_REQUEST} from \"../reducers/postReducer\"\r\nimport {LOAD_USER_REQUEST} from \"../reducers/userReducer\"\r\nfunction index(){\r\n    const {logInDone} = useSelector(state=>state.userReducer);\r\n    const dispatch = useDispatch();\r\n    const {mainPosts,hasMorePosts,loadPostLoading} = useSelector(state=>state.postReducer);\r\n\r\n    useEffect(()=>{\r\n        dispatch({\r\n            type:LOAD_USER_REQUEST,\r\n        })\r\n        dispatch({\r\n            type:LOAD_POST_REQUEST,\r\n        });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        function onScroll(e){\r\n            // console.log(window.scrollY,document.documentElement.clientHeight,document.documentElement.scrollHeight)\r\n            const result = Math.floor(window.scrollY+document.documentElement.clientHeight)>=document.documentElement.scrollHeight-300;\r\n            // console.log(Math.floor(window.scrollY+document.documentElement.clientHeight),document.documentElement.scrollHeight-300)\r\n            // console.log(result);\r\n            if(result && hasMorePosts && !loadPostLoading){\r\n                dispatch({\r\n                    type:LOAD_POST_REQUEST\r\n                })\r\n            }\r\n        }\r\n        window.addEventListener(\"scroll\",onScroll);\r\n        return ()=>{\r\n            window.removeEventListener(\"scroll\",onScroll);\r\n        }\r\n    },[hasMorePosts,loadPostLoading])\r\n\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>home</title>\r\n            </Head>\r\n            <AppLayout>\r\n                {logInDone && <PostForm />}\r\n                {mainPosts.map((post,index)=><PostCard key={post.id} post={post} />) }\r\n            </AppLayout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default index;"]},"metadata":{},"sourceType":"module"}