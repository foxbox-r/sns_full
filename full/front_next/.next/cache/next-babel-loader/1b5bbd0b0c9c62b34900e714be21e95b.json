{"ast":null,"code":"import { CalculatorFilled, PushpinTwoTone } from \"@ant-design/icons\";\nimport { all, fork, takeEvery, put, delay, call } from \"redux-saga/effects\";\nimport shortId from \"shortid\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_ERROR, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, REMOVE_POST_ERROR, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_ERROR, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_POST_ERROR, generateDummyPost } from \"../reducers/postReducer\";\nimport { ADD_POST_TO_ME, REMOVE_POST_TO_ME } from \"../reducers/userReducer\";\nimport axios from \"axios\";\n\nfunction addPostApi(data) {\n  console.log(\"api\");\n  return axios.post(\"/post\", {\n    content: data.postContent\n  });\n}\n\nfunction* addPost(action) {\n  //(data:{postContent})\n  try {\n    const result = yield call(addPostApi, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    put({\n      type: ADD_POST_ERROR,\n      error: err\n    });\n  }\n}\n\nfunction* removePost(action) {\n  //(data:{id})\n  try {\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: {\n        id: action.data.id\n      }\n    });\n    yield put({\n      type: REMOVE_POST_TO_ME,\n      data: {\n        id: action.data.id\n      }\n    });\n  } catch (err) {\n    put({\n      type: REMOVE_POST_ERROR,\n      error: err\n    });\n  }\n}\n\nfunction addCommentApi(data) {\n  return axios.post(`/post/${data.postId}/comment`, {\n    content: data.postContent\n  });\n}\n\nfunction* addComment(action) {\n  //(data:{postId,content,userId})\n  try {\n    const result = yield call(addCommentApi, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction loadPostApi(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* loadPost(action) {\n  //\n  try {\n    const result = yield call(loadPost, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: {\n        newLoadedPosts: result\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POST_ERROR,\n      data: err\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeEvery(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchRemovePost() {\n  yield takeEvery(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchAddComment() {\n  yield takeEvery(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchLoadPost() {\n  yield takeEvery(LOAD_POST_REQUEST, loadPost);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLoadPost)]);\n}","map":{"version":3,"sources":["C:/WEB/full/front_next/sagas/postSaga.js"],"names":["CalculatorFilled","PushpinTwoTone","all","fork","takeEvery","put","delay","call","shortId","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_ERROR","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_ERROR","generateDummyPost","ADD_POST_TO_ME","REMOVE_POST_TO_ME","axios","addPostApi","data","console","log","post","content","postContent","addPost","action","result","type","id","err","error","removePost","addCommentApi","postId","addComment","loadPostApi","loadPost","newLoadedPosts","watchAddPost","watchRemovePost","watchAddComment","watchLoadPost","postSaga"],"mappings":"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","sourcesContent":["import { CalculatorFilled, PushpinTwoTone } from \"@ant-design/icons\";\r\nimport {all,fork,takeEvery,put,delay,call} from \"redux-saga/effects\"\r\nimport shortId from \"shortid\"\r\nimport {\r\n    ADD_POST_REQUEST,ADD_POST_SUCCESS,ADD_POST_ERROR,\r\n    REMOVE_POST_REQUEST,REMOVE_POST_SUCCESS,REMOVE_POST_ERROR,\r\n     ADD_COMMENT_REQUEST,ADD_COMMENT_SUCCESS,ADD_COMMENT_ERROR,\r\n     LOAD_POST_REQUEST,LOAD_POST_SUCCESS,LOAD_POST_ERROR,\r\n     generateDummyPost\r\n} from \"../reducers/postReducer\"\r\nimport {\r\n    ADD_POST_TO_ME,REMOVE_POST_TO_ME,\r\n} from \"../reducers/userReducer\"\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction addPostApi(data){ \r\n    console.log(\"api\");\r\n    return axios.post(\"/post\",{content:data.postContent});\r\n}\r\n\r\nfunction* addPost(action){//(data:{postContent})\r\n    try{\r\n        const result = yield call(addPostApi,action.data);\r\n        yield put({ \r\n            type:ADD_POST_SUCCESS,\r\n            data:result.data,\r\n        });\r\n        yield put({\r\n            type:ADD_POST_TO_ME,\r\n            data:result.data.id\r\n        })\r\n    } catch(err){\r\n        put({\r\n            type:ADD_POST_ERROR,\r\n            error:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* removePost(action){//(data:{id})\r\n    try{\r\n        yield delay(1000);\r\n        yield put({ \r\n            type:REMOVE_POST_SUCCESS,\r\n            data:{\r\n                id:action.data.id,\r\n            }\r\n        });\r\n        yield put({\r\n            type:REMOVE_POST_TO_ME,\r\n            data:{\r\n                id:action.data.id,\r\n            }\r\n        })\r\n    } catch(err){\r\n        put({\r\n            type:REMOVE_POST_ERROR,\r\n            error:err,\r\n        })\r\n    }\r\n}\r\n\r\nfunction addCommentApi(data){ \r\n    return axios.post(`/post/${data.postId}/comment`,{content:data.postContent});\r\n}\r\n\r\nfunction* addComment(action){//(data:{postId,content,userId})\r\n    try{\r\n        const result = yield call(addCommentApi,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:ADD_COMMENT_SUCCESS,\r\n            data:result.data,\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:ADD_COMMENT_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction loadPostApi(data){\r\n    return axios.post(\"/post\",data);\r\n}\r\n\r\nfunction* loadPost(action){//\r\n    try{\r\n        const result = yield call(loadPost,action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type:LOAD_POST_SUCCESS,\r\n            data:{\r\n                newLoadedPosts:result\r\n            }\r\n        })\r\n    } catch(err){\r\n        yield put({\r\n            type:LOAD_POST_ERROR,\r\n            data:err\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost(){\r\n    yield takeEvery(ADD_POST_REQUEST,addPost);\r\n}\r\n\r\nfunction* watchRemovePost(){\r\n    yield takeEvery(REMOVE_POST_REQUEST,removePost);\r\n}\r\n\r\nfunction* watchAddComment(){\r\n    yield takeEvery(ADD_COMMENT_REQUEST,addComment)\r\n}\r\nfunction* watchLoadPost(){\r\n    yield takeEvery(LOAD_POST_REQUEST,loadPost);\r\n}\r\n\r\nexport default function* postSaga(){\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n        fork(watchRemovePost),\r\n        fork(watchLoadPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}